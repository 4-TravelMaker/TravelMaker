<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
<comment>board-sql-kks.xml</comment>

	<!-- 게시판 이름 조회 -->
	<entry key="selectBoardName">
		SELECT BOARD_NM
		FROM BOARD_TYPE
		WHERE BOARD_CD = ?
	</entry>

	<!-- 특정 게시판의 전체 게시글 수 조회 -->
	<entry key="getListCount">
		SELECT COUNT(*) FROM BOARD
		WHERE BOARD_CD = ?
		AND BOARD_ST = 'N'
	</entry>

	<!-- 특정 게시판에서 일정한 범위의 목록 조회 -->
	<entry key="selectBoardList">
		SELECT * FROM(
		    SELECT ROWNUM RNUM, A.* FROM(    
		        SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICK, 
		                TO_CHAR(CREATE_DT, 'YYYY-MM-DD') AS CREATE_DT, 
		                READ_COUNT, IMG_RENAME, PROFILE_IMG
		        FROM BOARD
		        JOIN MEMBER USING(MEMBER_NO)
                LEFT JOIN BOARD_IMG USING(BOARD_NO)
		        WHERE BOARD_CD = ?
		        AND (IMG_LEVEL = 0 OR IMG_LEVEL IS NULL)
		        AND BOARD_ST = 'N'
		        ORDER BY BOARD_NO DESC
		    ) A
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 게시글 상세 조회 -->
	<entry key="selectBoardDetail">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
		    TO_CHAR(CREATE_DT, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') CREATE_DT,
		    READ_COUNT, MEMBER_NICK, PROFILE_IMG, MEMBER_NO, BOARD_NM,
            (SELECT COUNT(*)
             FROM BOARD_LIKE
             WHERE BOARD_NO = ?) AS LIKE_COUNT
		FROM BOARD
		JOIN MEMBER USING(MEMBER_NO)
		JOIN BOARD_TYPE USING(BOARD_CD)
		WHERE BOARD_NO = ?
		AND BOARD_ST = 'N'
	</entry>
	
	<!-- 특정 게시글에 좋아요를 누른 회원 번호 조회 -->
	<entry key="selectLikeList">
		SELECT MEMBER_NO
		FROM BOARD_LIKE
		WHERE BOARD_NO = ?
	</entry>
	
	<!-- 게시글에 첨부된 이미지 리스트 조회 -->
	<entry key="selectImageList">
		SELECT * FROM BOARD_IMG
		WHERE BOARD_NO = ?
		ORDER BY IMG_LEVEL
	</entry>
	
	<!-- 좋아요 취소 -->
	<entry key="minusLike">
		DELETE FROM BOARD_LIKE
		WHERE MEMBER_NO = ?
		AND BOARD_NO = ?
	</entry>
	
	<!-- 좋아요 클릭 -->
	<entry key="plusLike">
		INSERT INTO BOARD_LIKE
		VALUES(?, ?)
	</entry>
	
	<!-- 좋아요 개수 조회 -->
	<entry key="selectLikeCount">
		SELECT COUNT(BOARD_NO)
		FROM BOARD_LIKE
		WHERE BOARD_NO = ?
	</entry>
	
	<!-- 각 게시글 당 댓글 개수 조회 -->
	<entry key="getReplyCount">
		SELECT COUNT(*) AS REPLY_COUNT FROM REPLY
		WHERE BOARD_NO = ?
		AND REPLY_ST = 'N'
	</entry>
	
	<!-- 다음 게시글 번호 조회 -->
	<entry key="nextBoardNo">
		SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
	</entry>
	
	<!-- 게시글 삽입 -->
	<entry key="insertBoard">
		INSERT INTO BOARD
		VALUES(?, ?, ?, DEFAULT, DEFAULT, ?, ?, 1, DEFAULT)
	</entry>
	
	<!-- 게시글 이미지 삽입 -->
	<entry key="insertBoardImage">
		INSERT INTO BOARD_IMG
		VALUES(SEQ_IMG_NO.NEXTVAL, ?, ?, ?, ?)
	</entry>
	
	<!-- 게시글 수정 -->
	<entry key="updateBoard">
		UPDATE BOARD SET
		BOARD_TITLE = ?,
		BOARD_CONTENT = ?
		WHERE BOARD_NO = ?
	</entry>
	
	<!-- 게시글 이미지 수정 -->
	<entry key="updateBoardImage">
		UPDATE BOARD_IMG SET
		IMG_RENAME = ?,
		IMG_ORIGINAL = ?
		WHERE BOARD_NO = ?
		AND IMG_LEVEL = ?
	</entry>
	
	<!-- 게시글 이미지 삭제 -->
	<entry key="deleteBoardImage">
		DELETE FROM BOARD_IMG
		WHERE BOARD_NO = ?
		AND IMG_LEVEL IN (
	</entry>
	
	<!-- 게시글 삭제 -->
	<entry key="deleteBoard">
		UPDATE BOARD SET
		BOARD_ST = 'Y'
		WHERE BOARD_NO = ?
	</entry>
	
	<!-- 조건을 만족하는 게시글 수 조회 -->
	<entry key="searchListCount">
		SELECT COUNT(*) FROM BOARD
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_ST = 'N'
		AND BOARD_CD = ?
	</entry>
	
	<!-- 특정 게시판에서 조건을 만족하는 게시글 목록 조회 -->
	<entry key="searchBoardList1">
		SELECT * FROM(
			SELECT ROWNUM RNUM, A.* FROM(    
		    	SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICK, 
		                TO_CHAR(CREATE_DT, 'YYYY-MM-DD') AS CREATE_DT, 
		                READ_COUNT, IMG_RENAME, PROFILE_IMG
		        FROM BOARD
		        JOIN MEMBER USING(MEMBER_NO)
		        LEFT JOIN BOARD_IMG USING(BOARD_NO)
		        WHERE BOARD_CD = ?
		        AND (IMG_LEVEL = 0 OR IMG_LEVEL IS NULL)
		        AND BOARD_ST = 'N'
	</entry>
	
	<entry key="searchBoardList2">
				ORDER BY BOARD_NO DESC
	    	) A
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 조회수 증가 -->
	<entry key="plusReadCount">
		UPDATE BOARD SET
		READ_COUNT = READ_COUNT + 1
		WHERE BOARD_NO = ?
	</entry>
	
	<!-- 여행 계획하기 -->
	<entry key="travelMake">
		INSERT INTO TRAVEL_MAKER
		VALUES(SEQ_PLAN_NO.NEXTVAL, ?, ?, ?, ?, ?, DEFAULT)
	</entry>
	
	<!-- 내 여행 계획 조회 -->
	<entry key="selectPlanList">
		SELECT PLAN_NO, PLAN_TITLE, PLAN_CONTENT, THUMBNAIL, DATE_LEVEL
		FROM TRAVEL_MAKER
		WHERE MEMBER_NO = ?
		AND PLAN_ST = 'N'
	</entry>
	
	<!-- 특정 여행 계획 조회 -->
	<entry key="selectPlan">
		SELECT PLAN_NO, PLAN_TITLE, PLAN_CONTENT, THUMBNAIL, DATE_LEVEL
		FROM TRAVEL_MAKER
		WHERE MEMBER_NO = ?
		AND PLAN_NO = ?
		AND PLAN_ST = 'N'
	</entry>
	
	<!-- 여행 계획 업데이트 -->
	<entry key="updatePlan">
		UPDATE TRAVEL_MAKER SET
		PLAN_TITLE = ?,
		PLAN_CONTENT = ?,
		THUMBNAIL = ?,
		DATE_LEVEL = ?
		WHERE PLAN_NO = ?
		AND PLAN_ST = 'N'
	</entry>
	
	<!-- 여행 계획 삭제 -->
	<entry key="deletePlan">
		UPDATE TRAVEL_MAKER SET
		PLAN_ST = 'Y'
		WHERE PLAN_NO = ?
	</entry>
</properties>
