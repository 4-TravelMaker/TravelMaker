/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-07-19 07:45:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>TravelMaker</title>\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/small_logo.png\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/region3.css\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"https://kit.fontawesome.com/ef988defcf.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <main>\r\n");
      out.write("        <header>\r\n");
      out.write("            <section class=\"head\">\r\n");
      out.write("                <section id=\"logo\">\r\n");
      out.write("                    <a href=\"#\">\r\n");
      out.write("\r\n");
      out.write("                        <img src=\"image/logo.png\" width=\"100%\">\r\n");
      out.write("\r\n");
      out.write("                    </a>\r\n");
      out.write("                </section>\r\n");
      out.write("\r\n");
      out.write("                <section></section>\r\n");
      out.write("\r\n");
      out.write("                <section id=\"search-area\">\r\n");
      out.write("                    <form action=\"#\" name=\"search-form\">\r\n");
      out.write("                        <fieldset>\r\n");
      out.write("                            <section>\r\n");
      out.write("                                <input type=\"search\" id=\"query\" name=\"query\" autocomplete=\"off\">\r\n");
      out.write("                                <button type=\"submit\" id=\"search-btn\" class=\"fa-solid fa-magnifying-glass\"></button>\r\n");
      out.write("                            </section>\r\n");
      out.write("                        </fieldset>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </section>\r\n");
      out.write("                <section></section>\r\n");
      out.write("\r\n");
      out.write("                <section class=\"login-area\">\r\n");
      out.write("\r\n");
      out.write("                    <button>\r\n");
      out.write("                        <a href=\"#\">로그인</a>\r\n");
      out.write("                    </button>\r\n");
      out.write("                    <button>\r\n");
      out.write("                        <a href=\"#\">회원가입</a>\r\n");
      out.write("                    </button>\r\n");
      out.write("                </section>\r\n");
      out.write("            </section>\r\n");
      out.write("        </header>\r\n");
      out.write("\r\n");
      out.write("        <nav>\r\n");
      out.write("            <section id=\"nav\">\r\n");
      out.write("                <section class=\"nav-menu\">\r\n");
      out.write("                    <a href=\"#\">지역</a>\r\n");
      out.write("                </section>\r\n");
      out.write("                <section class=\"nav-menu\">\r\n");
      out.write("                    <a href=\"#\">테마</a>\r\n");
      out.write("                </section>\r\n");
      out.write("                <section class=\"nav-menu\">\r\n");
      out.write("                    <a href=\"#\">여행 계획하기</a>\r\n");
      out.write("                </section>\r\n");
      out.write("                <section class=\"nav-menu\">\r\n");
      out.write("                    <a href=\"#\">여행 리뷰</a>\r\n");
      out.write("                </section>\r\n");
      out.write("            </section>\r\n");
      out.write("        </nav>\r\n");
      out.write("\r\n");
      out.write("        <section id=\"middle\">\r\n");
      out.write("\r\n");
      out.write("            <section class = \"title\">\r\n");
      out.write("                <p>헤이다이닝</p>\r\n");
      out.write("                <p>울산 남구</p>\r\n");
      out.write("                <mark>매콤한 먹물파스타가 맛있는 레스토랑</mark>\r\n");
      out.write("                <hr>\r\n");
      out.write("            </section>\r\n");
      out.write("            <section class=\"like\">\r\n");
      out.write("                <p>좋아요</p>\r\n");
      out.write("                <section>\r\n");
      out.write("                     <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/헤이다이닝.jpg\" width=\"550px\" height=\"370px\">\r\n");
      out.write("                </section>\r\n");
      out.write("            </section>\r\n");
      out.write("            <section class=\"article\">\r\n");
      out.write("                <p>상세정보</p>\r\n");
      out.write("                <hr>\r\n");
      out.write("                <p>울산 삼산동 업스퀘어 근처 맥도날드 뒤편에 있는 헤이다이닝은 깔끔하고 모던한 장소에서 식사를 즐길 수 있는 이탈리안 레스토랑이다. 대표 메뉴는 타이거 쉬림프 로제 파스타, 이베리코 온 더 리조또, 블랙앵거스 살치살 스테이크이고 그 외 스퀴드 잉크 파스타, 오징어먹물 아란치니, 자몽에이드 등 다양한 메뉴가 있다. 밤이 되면 조도로 분위기를 조절해서 연인들의 데이트 장소로 인기가 많다. 태화강변이 근처에 있어 함께 둘러보기 좋고, 서점과 미술관, 공원도 있다.</p>\r\n");
      out.write("            </section>\r\n");
      out.write("            <section class=\"map\">\r\n");
      out.write("                <section>지도</section>\r\n");
      out.write("                <section class=\"map1-1\">\r\n");
      out.write("                    <section>\r\n");
      out.write("                        <ul>\r\n");
      out.write("                            <li>문의 및 안내</li>\r\n");
      out.write("                            <li>주소</li>\r\n");
      out.write("                            <li>주차</li>\r\n");
      out.write("                            <li>취급메뉴</li>\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </section>\r\n");
      out.write("                    <section>\r\n");
      out.write("                        <ul>\r\n");
      out.write("                            <li>홈페이지</li>\r\n");
      out.write("                            <li>영업시간</li>\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </section>\r\n");
      out.write("                </section>\r\n");
      out.write("            </section>\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write(">>>>>>> e437157e1796ff6fe72bc143a0df505a9f6c7a26\r\n");
      out.write("\r\n");
      out.write("        </section>\r\n");
      out.write("\r\n");
      out.write("        <footer>\r\n");
      out.write("            <section>Copyright © TravelMaker Corp. All rights reserved.</section>\r\n");
      out.write("            <section class=\"footer\"> 　　이용약관　　 </section>\r\n");
      out.write("            <section class=\"footer\"> 　　운영정책　　 </section>\r\n");
      out.write("            <section class=\"footer\"> 　　1:1문의　　 </section>\r\n");
      out.write("        </footer>\r\n");
      out.write("    </main>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
